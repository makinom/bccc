{
  "_args": [
    [
      {
        "raw": "bs58@https://registry.npmjs.org/bs58/-/bs58-3.0.0.tgz",
        "scope": null,
        "escapedName": "bs58",
        "name": "bs58",
        "rawSpec": "https://registry.npmjs.org/bs58/-/bs58-3.0.0.tgz",
        "spec": "https://registry.npmjs.org/bs58/-/bs58-3.0.0.tgz",
        "type": "remote"
      },
      "/Users/makinomasashi/Documents/blockchain-university/node_modules/fullnode"
    ]
  ],
  "_from": "bs58@3.0.0",
  "_id": "bs58@3.0.0",
  "_inCache": true,
  "_location": "/fullnode/bs58",
  "_phantomChildren": {},
  "_requested": {
    "raw": "bs58@https://registry.npmjs.org/bs58/-/bs58-3.0.0.tgz",
    "scope": null,
    "escapedName": "bs58",
    "name": "bs58",
    "rawSpec": "https://registry.npmjs.org/bs58/-/bs58-3.0.0.tgz",
    "spec": "https://registry.npmjs.org/bs58/-/bs58-3.0.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/fullnode"
  ],
  "_resolved": "https://registry.npmjs.org/bs58/-/bs58-3.0.0.tgz",
  "_shasum": "3447f967f3d0c14c63432e33f30314e50efa395a",
  "_shrinkwrap": null,
  "_spec": "bs58@https://registry.npmjs.org/bs58/-/bs58-3.0.0.tgz",
  "_where": "/Users/makinomasashi/Documents/blockchain-university/node_modules/fullnode",
  "bugs": {
    "url": "https://github.com/cryptocoinjs/bs58/issues"
  },
  "dependencies": {
    "base-x": "^1.0.1"
  },
  "description": "Base 58 encoding / decoding",
  "devDependencies": {
    "mocha": "^2.0.0",
    "mochify": "^2.1.0",
    "standard": "^5.1.0"
  },
  "homepage": "https://github.com/cryptocoinjs/bs58#readme",
  "keywords": [
    "base58",
    "bitcoin",
    "crypto",
    "crytography",
    "decode",
    "decoding",
    "encode",
    "encoding",
    "litecoin"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "bs58",
  "optionalDependencies": {},
  "readme": "bs58\n====\n\n[![build status](https://secure.travis-ci.org/cryptocoinjs/bs58.png)](http://travis-ci.org/cryptocoinjs/bs58)\n\nJavaScript component to compute base 58 encoding. This encoding is typically used for crypto currencies such as Bitcoin.\n\n\nInstall\n-------\n\n    npm i --save bs58\n\n\nAPI\n---\n\n### encode(input)\n\n`input` must be a [Buffer](http://nodejs.org/api/buffer.html) or an `Array`. It returns a `string`.\n\n**example**:\n\n```js\nvar bs58 = require('bs58')\n\nvar unencodedData = \"003c176e659bea0f29a3e9bf7880c112b1b31b4dc826268187\"\nvar out = bs58.encode(new Buffer(unencodedData, 'hex'))\nconsole.log(out) // => 16UjcYNBG9GTK4uq2f7yYEbuifqCzoLMGS\n```\n\n\n### decode(input)\n\n`input` must be a base 58 encoded string. Returns an `Array`.\n\n**example**:\n\n```js\nvar bs58 = require('bs58')\n\nvar address = \"16UjcYNBG9GTK4uq2f7yYEbuifqCzoLMGS\"\nvar out = bs58.decode(address)\nconsole.log(out.toString())\n// => 0,60,23,110,101,155,234,15,41,163,233,191,120,128,193,18,177,179,27,77,200,38,38,129,135\n\n// if using Node.js or browserify\nconsole.log(new Buffer(out).toString('hex'))\n// => 003c176e659bea0f29a3e9bf7880c112b1b31b4dc826268187\n```\n\nHack / Test\n-----------\n\nUses JavaScript standard style. Read more:\n\n[![js-standard-style](https://cdn.rawgit.com/feross/standard/master/badge.svg)](https://github.com/feross/standard)\n\n\nCredits\n-------\n- [Mike Hearn](https://github.com/mikehearn) for original Java implementation\n- [Stefan Thomas](https://github.com/justmoon) for porting to JavaScript\n- [Stephan Pair](https://github.com/gasteve) for buffer improvements\n- [Daniel Cousens](https://github.com/dcousens) for cleanup and merging improvements from bitcoinjs-lib\n- [Jared Deckard](https://github.com/deckar01) for killing `bigi` as a dependency\n\n\nLicense\n-------\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "url": "git+ssh://git@github.com/cryptocoinjs/bs58.git",
    "type": "git"
  },
  "scripts": {
    "browser-test": "mochify --wd -R spec",
    "standard": "standard",
    "test": "npm run standard && npm run unit",
    "unit": "mocha"
  },
  "version": "3.0.0"
}
